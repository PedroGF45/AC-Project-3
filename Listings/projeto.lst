C51 COMPILER V9.60.7.0   PROJETO                                                           05/18/2024 15:11:39 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE PROJETO
OBJECT MODULE PLACED IN .\Objects\projeto.obj
COMPILER INVOKED BY: F:\Keil_v5\C51\BIN\C51.EXE projeto.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\p
                    -rojeto.lst) TABS(2) OBJECT(.\Objects\projeto.obj)

line level    source

   1          #include <reg51.h>
   2          
   3          #define tenthSecond         2 //time to count 0,1 seconds (2 x 50ms)
   4          #define second              20 // time to count 1 second (20 x 50ms)
   5          
   6          // values for display
   7          #define null                0xFF  
   8          #define zeroDot             0x02  
   9          #define oneDot              0x9E  
  10          #define twoDot              0x24  
  11          #define threeDot            0x0C  
  12          #define fourDot             0x98  
  13          #define fiveDot             0x48  
  14          #define sixDot              0x40  
  15          #define sevenDot            0x1E  
  16          #define eightDot            0x00  
  17          #define nineDot             0x08  
  18          #define hifenDot            0xFC  
  19          #define zero                0x03  
  20          #define one                 0x9F  
  21          #define two                 0x25  
  22          #define three               0x0D  
  23          #define four                0x99  
  24          #define five                0x49  
  25          #define six                 0x41  
  26          #define seven               0x1F  
  27          #define eight               0x01  
  28          #define nine                0x09  
  29          #define hifen               0xFD  
  30          #define a                   0x11  
  31          #define b                   0xC1  
  32          #define c                   0x63  
  33          #define d                   0x85  
  34          
  35          // display 1 segmentation
  36          sbit segA1 = P1 ^ 0;
  37          sbit segB1 = P1 ^ 1;
  38          sbit segC1 = P1 ^ 2;
  39          sbit segD1 = P1 ^ 3;
  40          sbit segE1 = P1 ^ 4;
  41          sbit segF1 = P1 ^ 5;
  42          sbit segG1 = P1 ^ 6;
  43          sbit segDP1 = P1 ^ 7;
  44          
  45          // display 2 segmentation
  46          sbit segA2 = P2 ^ 0;
  47          sbit segB2 = P2 ^ 1;
  48          sbit segC2 = P2 ^ 2;
  49          sbit segD2 = P2 ^ 3;
  50          sbit segE2 = P2 ^ 4;
  51          sbit segF2 = P2 ^ 5;
  52          sbit segG2 = P2 ^ 6;
  53          sbit segDP2 = P2 ^ 7;
  54          
C51 COMPILER V9.60.7.0   PROJETO                                                           05/18/2024 15:11:39 PAGE 2   

  55          // B1 definition
  56          sbit B1 = P3^2;
  57          sbit BA = P3^4;
  58          sbit BB = P3^5;
  59          sbit BC = P3^6;
  60          sbit BD = P3^7;
  61          
  62          bit pressM = 0;
  63          bit pressA = 0;
  64          bit pressB = 0;
  65          bit pressC = 0;
  66          bit pressD = 0;
  67          bit waitingState = 1;
  68          bit changeDisplay = 0;
  69          
  70          int counter = 0;    // variavel que incrementa cada vez que timer conta 50ms
  71          int counter1 = 0; 
  72          int i = 0;         // variavel para assinalar o estado da informa??o nos displays
  73          
  74          
  75          //Function declarations
  76          void Init(void);
  77          void display(unsigned char digitMSB, unsigned char digitLSB);
  78          
  79          
  80          void main (void)
  81          { 
  82   1        Init(); 
  83   1      
  84   1          while(1) {
  85   2            
  86   2            // button has been pressed to start counting
  87   2            if (~waitingState) {
  88   3              
  89   3              unsigned char D1;
  90   3              unsigned char D2;
  91   3              
  92   3              if (changeDisplay) {
  93   4                
  94   4                if (counter >= (4*second)) {
  95   5                  
  96   5                  D1 = zeroDot;
  97   5                  
  98   5                } else if (counter >= (3*second)) {
  99   5                  
 100   5                  D1 = oneDot;
 101   5                  
 102   5                } else if (counter >= (2*second)) {
 103   5                  
 104   5                  D1 = twoDot;
 105   5                  
 106   5                } else if (counter >= second) {
 107   5                  
 108   5                  D1 = threeDot;
 109   5                  
 110   5                } else if (counter >= 0) {
 111   5                  
 112   5                  D1 = fourDot;
 113   5                  
 114   5                }
 115   4                
 116   4                if (counter1 >= (9*tenthSecond)) {
C51 COMPILER V9.60.7.0   PROJETO                                                           05/18/2024 15:11:39 PAGE 3   

 117   5                  
 118   5                  D2 = zero;
 119   5                  
 120   5                } else if (counter1 >= (8*tenthSecond)) {
 121   5                  
 122   5                  D2 = one;
 123   5                  
 124   5                } else if (counter1 >= (7*tenthSecond)) {
 125   5                  
 126   5                  D2 = two;
 127   5                  
 128   5                } else if (counter1 >= (6*tenthSecond)) {
 129   5                  
 130   5                  D2 = three;
 131   5                  
 132   5                } else if (counter1 >= (5*tenthSecond)) {
 133   5                  
 134   5                  D2 = four;
 135   5                  
 136   5                } else if (counter1 >= (4*tenthSecond)) {
 137   5                  
 138   5                  D2 = five;
 139   5                  
 140   5                } else if (counter1 >= (3*tenthSecond)) {
 141   5                  
 142   5                  D2 = six;
 143   5                  
 144   5                } else if (counter1 >= (2*tenthSecond)) {
 145   5                  
 146   5                  D2 = seven;
 147   5                  
 148   5                } else if (counter1 >= tenthSecond) {
 149   5                  
 150   5                  D2 = eight;
 151   5                  
 152   5                } else if (counter1 >= 0) {
 153   5                  
 154   5                  D2 = nine;
 155   5                  
 156   5                }
 157   4      
 158   4                display(D1, D2);
 159   4                
 160   4              }
 161   3              
 162   3            }
 163   2                  
 164   2          } 
 165   1      }
 166          void Init(void){
 167   1        //Configuration of interruptions
 168   1        EA = 1; //ativate global interruptions
 169   1        ET0 = 1; // activate timer interruption 0
 170   1        EX0 = 1; // activate external interruption 0
 171   1        
 172   1        //Configure TMOD
 173   1        TMOD &= 0xF0; //Clean initial 4 bits of timer 0 and 1
 174   1        TMOD |= 0x01; //Set timer 0 with 16 bits
 175   1        
 176   1        //Configure timer 0
 177   1        //Timer 0 - 50ms -> (65536(10000h) - 50000(3E8h) = 15536(3CB0h))
 178   1        TH0 = 0x3C; 
C51 COMPILER V9.60.7.0   PROJETO                                                           05/18/2024 15:11:39 PAGE 4   

 179   1        TL0 = 0xB0;
 180   1      
 181   1      
 182   1        //Configure TCON
 183   1        IT0 = 1; //specify falling edge trigger on external interruption 0
 184   1        //IT1 = 1;
 185   1        
 186   1        display(fiveDot, zero);
 187   1      }
 188          
 189          //interrupcao tempo 0 para contar tempo de 5ms de debounce
 190          void Timer0_ISR (void) interrupt 1 {  
 191   1        
 192   1        //Configure timer 0
 193   1        //Timer 0 - 50ms -> (65536(10000h) - 50000(C350h)= 15536(3CB0h))
 194   1        TH0 = 0x3C; 
 195   1        TL0 = 0xB0;
 196   1      
 197   1        counter++;
 198   1        counter1++;
 199   1        
 200   1        changeDisplay = 1;
 201   1        
 202   1        if(counter >= (5*second)){      // check if gets past 5s
 203   2          counter = 0;                  
 204   2        }
 205   1        
 206   1        if(counter >= second) {  // check if pass 1s
 207   2          counter1 = 0;
 208   2        }
 209   1          
 210   1      }
 211          
 212          
 213          void External0_ISR (void) interrupt 0 {
 214   1        
 215   1      
 216   1        if (waitingState) {
 217   2          waitingState = ~waitingState; // start counting time
 218   2          TR0 = 1;
 219   2        }
 220   1        
 221   1        
 222   1      }
 223          
 224          void display(unsigned char digitMSB, unsigned char digitLSB)
 225          {
 226   1      
 227   1        changeDisplay = 0;
 228   1        
 229   1        P1 = digitMSB;
 230   1        P2 = digitLSB;
 231   1      
 232   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    394    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      6       2
C51 COMPILER V9.60.7.0   PROJETO                                                           05/18/2024 15:11:39 PAGE 5   

   IDATA SIZE       =   ----    ----
   BIT SIZE         =      7    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
